[{"/Users/Callum/Documents/Coding/MissionReady/Advanced Software Developer Jan 21 - Mar 21/Missions/Mission2/Recognition App/app/recognition-app/src/index.js":"1","/Users/Callum/Documents/Coding/MissionReady/Advanced Software Developer Jan 21 - Mar 21/Missions/Mission2/Recognition App/app/recognition-app/src/App.js":"2","/Users/Callum/Documents/Coding/MissionReady/Advanced Software Developer Jan 21 - Mar 21/Missions/Mission2/Recognition App/app/recognition-app/src/reportWebVitals.js":"3"},{"size":500,"mtime":1612136398543,"results":"4","hashOfConfig":"5"},{"size":5376,"mtime":1612338707382,"results":"6","hashOfConfig":"5"},{"size":362,"mtime":1612136398544,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},"145dwxf",{"filePath":"11","messages":"12","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"13","usedDeprecatedRules":"10"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"/Users/Callum/Documents/Coding/MissionReady/Advanced Software Developer Jan 21 - Mar 21/Missions/Mission2/Recognition App/app/recognition-app/src/index.js",[],["17","18"],"/Users/Callum/Documents/Coding/MissionReady/Advanced Software Developer Jan 21 - Mar 21/Missions/Mission2/Recognition App/app/recognition-app/src/App.js",["19"],"import React, { useState, useEffect } from \"react\";\nimport Axios from \"axios\";\n\nimport \"./App.css\";\n\nfunction App() {\n  const [disabled1, setDisabled1] = useState(false);\n  const [disabled2, setDisabled2] = useState(false);\n  const [disabled3, setDisabled3] = useState(true);\n  const [disabled4, setDisabled4] = useState(true);\n  const [disabled5, setDisabled5] = useState(false);\n  const [image, setImage] = useState();\n  const [file, setFile] = useState();\n  const [progress, setProgress] = useState(0);\n  const [status, setStatus] = useState();\n  const [analysis, setAnalysis] = useState([]);\n\n  let loadFile = (event) => {\n    try {\n      setImage(URL.createObjectURL(event.target.files[0]));\n      document.getElementById(\"input2\").value = \"\";\n      setDisabled2(true);\n      const file = event.target.files[0];\n      setFile(file);\n      setProgress(0);\n      setStatus();\n      setAnalysis([]);\n    } catch (err) {\n      console.log(err);\n      setStatus(err);\n      setImage();\n    }\n  };\n\n  let loadFile2 = () => {\n    let imageurl = document.getElementById(\"input2\").value;\n    document.getElementById(\"input1\").value = \"\";\n    setImage(imageurl);\n    setFile(imageurl);\n    console.log(imageurl);\n    setDisabled1(true);\n    setStatus();\n    setAnalysis([]);\n  };\n\n  let reset = () => {\n    setDisabled1(false);\n    setDisabled2(false);\n    setDisabled3(true);\n    setDisabled4(true);\n    setDisabled5(false);\n    setImage();\n    setStatus(\"Form Reset!\");\n    setAnalysis([]);\n    document.getElementById(\"input1\").value = \"\";\n    document.getElementById(\"input2\").value = \"\";\n  };\n\n  useEffect(() => {\n    let inputDisable = () => {\n      if (disabled1 === true) {\n        setDisabled2(false);\n      } else if (disabled2 === true) {\n        setDisabled1(false);\n      }\n    };\n\n    let submitDisable = () => {\n      disabled2 === true || disabled1 === true\n        ? setDisabled3(false)\n        : setDisabled3(true);\n    };\n\n    inputDisable();\n    submitDisable();\n  });\n\n  const getAnalysis = () => {\n    Axios.get(\"http://localhost:3001/analyse\").then((resp) => {\n      setAnalysis(resp);\n      console.log(resp);\n    });\n    setDisabled4(true);\n    setDisabled5(true);\n    setStatus();\n  };\n\n  const submitImage = async (e) => {\n    e.preventDefault();\n\n    const data = new FormData();\n    data.append(\"file\", file);\n    console.log(file);\n\n    await Axios.post(\"http://localhost:3001/upload\", data, {\n      onUploadProgress: (ProgressEvent) => {\n        let progress =\n          Math.round((ProgressEvent.loaded / ProgressEvent.total) * 100) + \"%\";\n        setProgress(progress);\n      },\n    })\n      .then((res) => {\n        console.log(res);\n        reset();\n        setStatus(res.data);\n        setDisabled4(false);\n      })\n      .catch((err) => {\n        console.log(err);\n        setStatus(err);\n      });\n  };\n\n  return (\n    <div className=\"App\">\n      <div>\n        <div className=\"form-container\">\n          <h1 className=\"main-title\">Turner's Image Recognition</h1>\n          <div className=\"inner-container\">\n            <form action=\"#\">\n              <h2 className=\"title\">Upload a local file:</h2>\n              <input\n                type=\"file\"\n                name=\"filename\"\n                id=\"input1\"\n                className=\"custom-file-input\"\n                accept=\"image/*\"\n                onChange={loadFile}\n                disabled={disabled1}\n              />\n              <br />\n              <h2 className=\"title\">Upload an online image:</h2>\n              <input\n                type=\"text\"\n                id=\"input2\"\n                name=\"url\"\n                placeholder=\"http://coolcarpics.com/audi.jpg\"\n                onChange={loadFile2}\n                disabled={disabled2}\n              />\n              <br />\n\n              <button disabled={disabled3} onClick={submitImage}>\n                Send Image\n              </button>\n              <button disabled={disabled4} onClick={getAnalysis}>\n                Get Analysis\n              </button>\n              <input\n                type=\"reset\"\n                id=\"reset\"\n                value=\"Reset form\"\n                onClick={reset}\n              />\n            </form>\n            <h2 className=\"status\">{status}</h2>\n            <img id=\"output\" alt=\"\" src={image} />\n            <div className=\"table-div\">\n              <table className=\"status\">\n                {disabled5 ? (\n                  <thead>\n                    <tr>\n                      <td className=\"table-head\">Label</td>\n                      <td className=\"table-head\">Confidence</td>\n                    </tr>\n                  </thead>\n                ) : null}\n                {analysis.data &&\n                  analysis.data.Labels.map((data, index) => {\n                    return (\n                      <tbody key={index}>\n                        <tr>\n                          <td>{data.Name}</td>\n                          <td>\n                            {Math.round(\n                              (data.Confidence + Number.EPSILON) * 100\n                            ) / 100}\n                            %\n                          </td>\n                        </tr>\n                      </tbody>\n                    );\n                  })}\n              </table>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","/Users/Callum/Documents/Coding/MissionReady/Advanced Software Developer Jan 21 - Mar 21/Missions/Mission2/Recognition App/app/recognition-app/src/reportWebVitals.js",[],["20","21"],{"ruleId":"22","replacedBy":"23"},{"ruleId":"24","replacedBy":"25"},{"ruleId":"26","severity":1,"message":"27","line":14,"column":10,"nodeType":"28","messageId":"29","endLine":14,"endColumn":18},{"ruleId":"22","replacedBy":"30"},{"ruleId":"24","replacedBy":"31"},"no-native-reassign",["32"],"no-negated-in-lhs",["33"],"no-unused-vars","'progress' is assigned a value but never used.","Identifier","unusedVar",["32"],["33"],"no-global-assign","no-unsafe-negation"]